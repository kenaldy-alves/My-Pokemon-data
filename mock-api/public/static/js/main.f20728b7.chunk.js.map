{"version":3,"sources":["components/services/getPokemonDetails.js","components/UI/table-pokemon-captured/modal-pokemon-details/pokemon-styles.js","components/services/palleteTypeColors.js","components/UI/table-pokemon-captured/modal-pokemon-details/pokemon-data/pokemon-data-styles.js","components/UI/table-pokemon-captured/modal-pokemon-details/pokemon-data/PokemonData.js","components/globals/globals-components/MyRadioButton.js","components/UI/table-pokemon-captured/modal-pokemon-details/pokemon-image/PokemonImage.js","components/UI/table-pokemon-captured/modal-pokemon-details/PokemonDetails.js","components/globals/globals-components/MyModal.js","components/globals/globals-components/DropDownButton.js","components/services/getCaptures.js","components/UI/table-pokemon-captured/filter-bar/filter-bar-styles.js","components/UI/table-pokemon-captured/filter-bar/FilterBar.js","components/globals/globals-styles/globals-styles.js","components/UI/table-pokemon-captured/captured-table/captured-table-styles.js","components/UI/table-pokemon-captured/captured-table/CapturedTable.js","components/UI/table-pokemon-captured/PokemonCaptured.js","components/UI/GraphCapturesByRegion/graph-captures-by-region-skeleton-styles.js","components/UI/GraphCapturesByRegion/GraphCapturesByRegionSkeleton.js","components/UI/GraphCapturesByRegion/GraphCapturesByRegion.js","components/UI/GraphCapturesByType/graph-captures-by-type-skeleton-styles.js","components/UI/GraphCapturesByType/GraphCapturesByTypeSkeleton.js","components/UI/GraphCapturesByType/GraphCapturesByType.js","components/UI/battle-team/battle-team-style.js","components/UI/battle-team/BattleTeamSkeleton.js","components/UI/battle-team/BattleTeam.js","components/services/getBattleTeam.js","components/services/getReports.js","assets/logo_pokedex.png","app-styles.js","App.js","index.js"],"names":["getPokemonDetails","pokemonId","a","fetch","method","headers","response","json","console","log","SkeletonPlaceText","styled","SkeletonPlaceholder","SkeletonPlaceCircle","palleteTypeColors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Div","section","TextH5","h5","H5","defaultValue","Pokemon","data","Row","name","weight","types","map","row","id","type","abilities","ability","MyRadioButton","radioButton","handleClick","labelText1","labelText2","disabledButton1","disabledButton2","FormControl","component","RadioGroup","onChange","FormControlLabel","value","control","Radio","color","label","disabled","PokemonImage","sprites","useState","setRadioButton","containFemaleVersion","front_female","containMaleVersion","front_default","style","fontWeight","condensed","src","alt","back_default","front_shiny","back_shiny","back_female","front_shiny_female","back_shiny_female","PokemonDetails","pokemonDetails","setPokemonDetails","useEffect","responsePokemonDetails","getDetails","Grid","Column","PokemonData","SkeletonText","Transition","React","forwardRef","props","ref","Slide","direction","MyModal","children","open","handleModal","title","width","height","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","DialogActions","Button","onClick","DropDownButton","items","handleSelected","marginRight","Dropdown","itemToString","item","text","selectedItem","light","getCaptures","getCapturesFilterByRegion","byRegion","byType","order","region","url","div","ButtonSearch","FilterBar","handleListPokemons","setByType","setByRegion","getListFiltered","pokemonsList","Header","Container","TableCellTypePokemon","TableCell","CapturedTable","initList","handleClickRow","slice","listPokemons","setListPokemons","Table","stickyHeader","size","marginBottom","TableHead","TableRow","header","TableBody","cursor","hover","Pagination","count","Math","ceil","length","defaultPage","showFirstButton","showLastButton","event","remainder","endIndex","startIndex","PokemonCaptures","captures","setPokemonId","setInitList","setOpen","list","GraphByRegionDiv","GraphByRegionBody","GraphByRegionSkeletonPlaceDiv","GraphByRegionSkeletonDiv","Skeleton","SkeletonPlace","GraphCapturesByRegionSkeleton","GraphCapturesByRegion","reports","sinnoh","hoenn","unova","kalos","kanto","chartType","loader","options","is3D","rootProps","GraphCapturesByTypeSkeleton","GraphCapturesByType","role","colors","legend","BattleTeamSkeleton","padding","BattleTeam","battleTeam","myBattleTeam","setBattleTeam","myTeam","key","Object","hasOwnProperty","call","pokedexNumber","push","photo","getMyTeam","getBattleTeam","getReports","Main","AppHeader","App","setCaptures","setReports","capturesResponse","battleTeamResponse","reportsResponse","loadCapture","logo","xlg","capturesByRegion","capturesByType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f20728b7.chunk.js","sourcesContent":["\r\nexport const getPokemonDetails = async (pokemonId) => {\r\n    try {\r\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n        return json\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}","import styled from 'styled-components'\r\nimport { SkeletonPlaceholder } from \"carbon-components-react\";\r\n\r\nexport const SkeletonPlaceText = styled(SkeletonPlaceholder)`\r\n    width: 10em;\r\n    height: 2em;\r\n    margin-bottom: 0.5em;\r\n`\r\n\r\nexport const SkeletonPlaceCircle = styled(SkeletonPlaceholder)`\r\n    width: 23em;\r\n    height: 7em;\r\n    margin-bottom: 0.5em;\r\n`","\r\nexport const palleteTypeColors = {\r\n    normal: '#A8A77A',\r\n    fire: '#EE8130',\r\n    water: '#6390F0',\r\n    electric: '#F7D02C',\r\n    grass: '#7AC74C',\r\n    ice: '#96D9D6',\r\n    fighting: '#C22E28',\r\n    poison: '#A33EA1',\r\n    ground: '#E2BF65',\r\n    flying: '#A98FF3',\r\n    psychic: '#F95587',\r\n    bug: '#A6B91A',\r\n    rock: '#B6A136',\r\n    ghost: '#735797',\r\n    dragon: '#6F35FC',\r\n    dark: '#705746',\r\n    steel: '#B7B7CE',\r\n    fairy: '#D685AD',\r\n};\r\n","import styled from 'styled-components'\r\nimport { palleteTypeColors } from '../../../../services/palleteTypeColors';\r\n\r\nexport const Div = styled.section`\r\n    margin-top: 1em;\r\n\r\n    h4{\r\n        fontWeight: lighter;\r\n        margin-bottom: 0.5em;\r\n    }\r\n`\r\nexport const TextH5 = styled.h5`\r\n    font-weight: lighter;\r\n    margin-bottom: 0.5em;\r\n    padding-left: 0.5em;\r\n`\r\nexport const H5 = styled.h5`\r\n    font-weight: bold;\r\n    margin-left: 0.5em;\r\n    margin-bottom: 0.5em;\r\n    padding: 0.3em;\r\n    color: white;\r\n    \r\n    ${({ defaultValue }) => `background-color: ${palleteTypeColors.[defaultValue]}`}\r\n`","import { Row } from 'carbon-components-react';\r\nimport { Div, TextH5, H5 } from './pokemon-data-styles'\r\n\r\nconst Pokemon = ({ data }) => {\r\n    return <Div>\r\n        <Row>\r\n            <h4>Informações</h4>\r\n        </Row>\r\n\r\n        <Row>\r\n            <h5>Nome:</h5>\r\n            <TextH5>{data.name}</TextH5>\r\n        </Row>\r\n        <Row>\r\n            <h5>Peso:</h5>\r\n            <TextH5>{data.weight}</TextH5>\r\n        </Row>\r\n        <Row>\r\n            <h5>Tipo:</h5>\r\n            {\r\n                data.types.map((row, id) => <H5 key={id} defaultValue={row.type.name}>{row.type.name}</H5>)\r\n            }\r\n        </Row>\r\n        <Row>\r\n            <h5>Habilidades: </h5>\r\n            {\r\n                data.abilities.map((row, id) => <TextH5  key={id}>{row.ability.name},</TextH5>)\r\n            }\r\n        </Row>\r\n    </Div>\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst MyRadioButton = ({ radioButton, handleClick, labelText1, labelText2, disabledButton1, disabledButton2 }) => {\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup row={true} defaultValue='radio-button1' onChange={() => handleClick(radioButton)}>\r\n                <FormControlLabel value='radio-button1' control={<Radio color=\"primary\" />} label={labelText1} disabled={disabledButton1} />\r\n                <FormControlLabel value='radio-button2' control={<Radio color=\"primary\" />} label={labelText2} disabled={disabledButton2} />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default MyRadioButton;\r\n","import { Row } from 'carbon-components-react'\r\nimport { useState } from 'react'\r\nimport MyRadioButton from '../../../../globals/globals-components/MyRadioButton'\r\n\r\nconst PokemonImage = ({ sprites }) => {\r\n    const [radioButton, setRadioButton] = useState('radio-button1')  // ESTADO DO RADIO BUTTON  \r\n    const containFemaleVersion = sprites.front_female === null ? false : true\r\n    const containMaleVersion = sprites.front_default === null ? false : true\r\n\r\n    //FUNÇÃO QUE CONTROLA O ESTADO DO RADIO BUTTON\r\n    const handleClick = (value) => value === 'radio-button1' ? setRadioButton('radio-button2') : setRadioButton('radio-button1')\r\n\r\n    return <section>\r\n        <Row>\r\n            <h4 style={{ fontWeight: 'lighter' }}>Imagens</h4>\r\n        </Row>\r\n        <Row condensed>\r\n            {\r\n                radioButton === 'radio-button1' ?\r\n                    containMaleVersion &&\r\n                    <Row>\r\n                        {sprites.front_default !== null ? <img src={sprites.front_default} alt=\"Front default pokemon\"></img> : null}\r\n                        {sprites.back_default !== null ? <img src={sprites.back_default} alt=\"Back default pokemon\"></img> : null}\r\n                        {sprites.front_shiny !== null ? <img src={sprites.front_shiny} alt=\"Front shiny default pokemon\"></img> : null}\r\n                        {sprites.back_shiny !== null ? <img src={sprites.back_shiny} alt=\"Back shiny default pokemon\"></img> : null}\r\n                    </Row>\r\n                    :\r\n                    containFemaleVersion &&\r\n                    <Row>\r\n                        {sprites.front_female ? <img src={sprites.front_female} alt=\"Front female pokemon\"></img> : null}\r\n                        {sprites.back_female ? <img src={sprites.back_female} alt=\"Back female pokemon\"></img> : null}\r\n                        {sprites.front_shiny_female ? <img src={sprites.front_shiny_female} alt=\"Front shiny female pokemon\"></img> : null}\r\n                        {sprites.back_shiny_female ? <img src={sprites.back_shiny_female} alt=\"Back shiny female pokemon\"></img> : null}\r\n                    </Row>\r\n            }\r\n        </Row>\r\n        <Row>\r\n            <MyRadioButton\r\n                radioButton={radioButton}\r\n                handleClick={handleClick}\r\n                labelText1=\"Default\"\r\n                labelText2=\"Fêmea\"\r\n                disabledButton1={!containMaleVersion}\r\n                disabledButton2={!containFemaleVersion}\r\n            ></MyRadioButton>\r\n        </Row>\r\n    </section>\r\n}\r\n\r\nexport default PokemonImage;","import { Column, Grid, Row, SkeletonText } from 'carbon-components-react';\r\nimport { useEffect, useState } from 'react'\r\nimport { getPokemonDetails } from '../../../services/getPokemonDetails';\r\nimport { SkeletonPlaceCircle, SkeletonPlaceText } from './pokemon-styles'\r\nimport PokemonData from './pokemon-data/PokemonData';\r\nimport PokemonImage from './pokemon-image/PokemonImage';\r\n\r\nconst PokemonDetails = ({ pokemonId }) => {\r\n    const [pokemonDetails, setPokemonDetails] = useState(null);\r\n\r\n    //CHAM A FUNÇÃO QUE BUSCA OS DADOS DO POKEMON E ATUALIZA O ESTADO TODA VEZ QUE O ID DO POKEMON MUDAR\r\n    useEffect(() => {\r\n        const getDetails = async () => {\r\n            const responsePokemonDetails = await getPokemonDetails(pokemonId);\r\n            setPokemonDetails(responsePokemonDetails)\r\n        }\r\n\r\n        getDetails()\r\n    }, [pokemonId])\r\n\r\n\r\n    return <Grid>\r\n        {\r\n            pokemonDetails !== null ?\r\n                <Row>\r\n                    <Column>\r\n                        <PokemonImage sprites={pokemonDetails.sprites}></PokemonImage>\r\n                        <PokemonData data={pokemonDetails}></PokemonData>\r\n                    </Column>\r\n                </Row> :\r\n                <Column>\r\n                    <SkeletonPlaceText></SkeletonPlaceText>\r\n                    <SkeletonPlaceCircle></SkeletonPlaceCircle>\r\n                    <SkeletonPlaceText></SkeletonPlaceText>\r\n                    <SkeletonText></SkeletonText>\r\n                    <SkeletonText></SkeletonText>\r\n                    <SkeletonText></SkeletonText>\r\n                    <SkeletonText></SkeletonText>\r\n                </Column>\r\n        }\r\n    </Grid>\r\n\r\n}\r\n\r\nexport default PokemonDetails;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const MyModal = ({ children, open, handleModal, title }) => {\r\n\r\n    return (\r\n        <div style={{width:'400px', height:'400px'}}>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleModal}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogContent>\r\n                    {children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleModal} color=\"primary\">\r\n                        Voltar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyModal;","import { Dropdown } from \"carbon-components-react\"\r\n\r\nconst DropDownButton = ({ items, title,handleSelected }) => {\r\n\r\n    return <div style={{ width: '20%', marginRight: '0.5em' }}>\r\n        <Dropdown\r\n            id=\"default\"\r\n            label={title}\r\n            items={items}\r\n            itemToString={(item) => (item ? item.text : '')}\r\n            onChange={(item) => handleSelected(item.selectedItem.text)}\r\n            light\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default DropDownButton;","\r\n//BUSCA A LISTA DOS POKÉMONS\r\nexport const getCaptures = async () => {\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:3000/captures', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        return json\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}\r\n\r\n//BUSCA A LISTA DOS POKÉMONS CAPTURADOS POR FILTROS\r\nexport const getCapturesFilterByRegion = async (byRegion, byType, radioButton) => {\r\n    let url;\r\n    //REALIZA OS TRAMENTOS DOS PARÂMETROS\r\n    const order = radioButton === 'radio-button1' ? 'asc' : 'desc'\r\n    const type = byType === 'Tipo' ? null : byType\r\n    const region = byRegion === 'Regiao' ? null : byRegion\r\n    console.log(region, type, order)\r\n\r\n    // VERIFICA QUAIS FILTROS DEVEM SER APLICADOS\r\n    if (region === null && type !== null) {\r\n        console.log('1')\r\n        url = `http://localhost:3000/captures?type=${type}&_sort=pokemonId&_order=${order}`\r\n    }\r\n    else if (region !== null && type === null) {\r\n        url = `http://localhost:3000/captures?region=${region}&_sort=pokemonId&_order=${order}`\r\n        console.log('2')\r\n    }\r\n    else if (region !== null && type !== null) {\r\n        url = `http://localhost:3000/captures?region=${region}&type=${type}&_sort=pokemonId&_order=${order}`\r\n\r\n        console.log(`http://localhost:3000/captures?region=${region}&type=${type}&_sort=pokemonId&_order=${order}`)\r\n    }\r\n    else {\r\n        url = `http://localhost:3000/captures?&_sort=pokemonId&_order=${order}`\r\n        console.log('3')\r\n    }\r\n\r\n    //REALIZA A CHAMAD DA REQUISIÇÃO\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n        console.log(json)\r\n\r\n        return json\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}\r\n","import styled from 'styled-components'\r\nimport { Button } from \"carbon-components-react\";\r\n\r\nexport const Div = styled.div`\r\n    display: flex;\r\n    padding: 0.5em;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`\r\nexport const H5 = styled.h5`\r\n    font-weight: lighter;\r\n    color: #333;\r\n\r\n    \r\n    @media screen and (max-width: 900px) {\r\n        display: none;\r\n    }\r\n`\r\nexport const ButtonSearch = styled(Button)`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding-left: 1em;\r\n    background-color: #5555ee;\r\n\r\n    h6{\r\n        text-align: center;\r\n    };\r\n    \r\n    &:hover{\r\n        background-color: #5555ee;\r\n        opacity: .8;\r\n    }\r\n\r\n`","import { useState } from \"react\";\r\nimport DropDownButton from \"../../../globals/globals-components/DropDownButton\";\r\nimport MyRadioButton from \"../../../globals/globals-components/MyRadioButton\";\r\nimport { getCapturesFilterByRegion } from '../../../services/getCaptures'\r\nimport { Div, H5, ButtonSearch } from './filter-bar-styles'\r\n\r\nconst FilterBar = ({ handleListPokemons }) => {\r\n    const [radioButton, setRadioButton] = useState('radio-button1')\r\n    const [byType, setByType] = useState(null)\r\n    const [byRegion, setByRegion] = useState(null)\r\n\r\n    //FUNÇÕES DE CONTROLE DOS ESTADOS\r\n    const handleClick = (value) => value === 'radio-button1' ? setRadioButton('radio-button2') : setRadioButton('radio-button1')\r\n    const handleByType = (value) => setByType(value)\r\n    const handleByRegion = (value) => setByRegion(value)\r\n\r\n    //FUNÇÃO QUE BUSCA A LISTA DE POKEMONS DE ACORDO COM OS FILTROS\r\n    const getListFiltered = async () => {\r\n        const pokemonsList = await getCapturesFilterByRegion(byRegion, byType, radioButton);\r\n        handleListPokemons(pokemonsList)\r\n    }\r\n\r\n    return <Div>\r\n        <H5>Filtrar por:</H5>\r\n        <MyRadioButton\r\n            radioButton={radioButton}\r\n            handleClick={handleClick}\r\n            labelText1=\"Crescente\"\r\n            labelText2=\"Decrescente\"\r\n            disabledButton1={false}\r\n            disabledButton2={false}\r\n        ></MyRadioButton>\r\n        <DropDownButton items={type} title=\"Tipo\" handleSelected={handleByType}></DropDownButton>\r\n        <DropDownButton items={region} title=\"Região\" handleSelected={handleByRegion}></DropDownButton>\r\n        <ButtonSearch onClick={() => getListFiltered()}>\r\n            <h6>Filtrar</h6>\r\n        </ButtonSearch>\r\n    </Div>\r\n}\r\n\r\nexport default FilterBar;\r\n\r\n\r\n// REGIOES PARA O DROPDOWN\r\nconst region = [\r\n    {\r\n        id: 'option-0',\r\n        text: \"Regiao\"\r\n    },\r\n    {\r\n        id: 'option-1',\r\n        text: \"sinnoh\"\r\n    },\r\n    {\r\n        id: 'option-2',\r\n        text: \"hoenn\"\r\n    },\r\n    {\r\n        id: 'option-3',\r\n        text: \"unova\"\r\n    },\r\n    {\r\n        id: 'option-4',\r\n        text: \"kalos\"\r\n    },\r\n    {\r\n        id: 'option-5',\r\n        text: \"kanto\"\r\n    }]\r\n\r\n// TIPOS DE POKEMON PARA O DROPDOWN\r\nconst type = [\r\n    {\r\n        id: 'option-0',\r\n        text: \"Tipo\"\r\n    },\r\n    {\r\n        id: 'option-01',\r\n        text: \"dragon\"\r\n    },\r\n    {\r\n        id: 'option-02',\r\n        text: \"ghost\"\r\n    },\r\n    {\r\n        id: 'option-03',\r\n        text: \"psychic\"\r\n    },\r\n    {\r\n        id: 'option-04',\r\n        text: \"grass\"\r\n    },\r\n    {\r\n        id: 'option-05',\r\n        text: \"fire\"\r\n    },\r\n    {\r\n        id: 'option-06',\r\n        text: \"normal\"\r\n    },\r\n    {\r\n        id: 'option-07',\r\n        text: \"bug\"\r\n    },\r\n    {\r\n        id: 'option-08',\r\n        text: \"water\"\r\n    },\r\n    {\r\n        id: 'option-09',\r\n        text: \"dark\"\r\n    },\r\n    {\r\n        id: 'option-10',\r\n        text: \"ground\"\r\n    },\r\n    {\r\n        id: 'option-11',\r\n        text: \"steel\"\r\n    },\r\n    {\r\n        id: 'option-12',\r\n        text: \"fairy\"\r\n    },\r\n    {\r\n        id: 'option-13',\r\n        text: \"fighting\"\r\n    },\r\n    {\r\n        id: 'option-14',\r\n        text: \"electric\"\r\n    },\r\n    {\r\n        id: 'option-15',\r\n        text: \"poison\"\r\n    },\r\n    {\r\n        id: 'option-16',\r\n        text: \"ice\"\r\n    },\r\n    {\r\n        id: 'option-17',\r\n        text: \"rock\"\r\n    },\r\n]\r\n","import styled from 'styled-components'\r\n\r\nexport const Div = styled.div`\r\n    background-color: white;\r\n    padding-bottom: 1em;\r\n`\r\n\r\nexport const Header = styled.div`\r\n    background-color: #5555ee;\r\n    margin-top: 1em;\r\n    padding: 1em;\r\n\r\n    h4{\r\n        font-weight: bold;\r\n        color: white ;\r\n    }\r\n`\r\n","import styled from 'styled-components'\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { palleteTypeColors } from '../../../services/palleteTypeColors';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start \r\n`\r\n\r\nexport const TableCellTypePokemon = styled(TableCell)`\r\n    ${({ defaultValue }) => `background-color: ${palleteTypeColors.[defaultValue]};`}\r\n    \r\n    &:hover:{\r\n        cursor: pointer;\r\n    }\r\n\r\n`","import { useEffect, useState } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport { Container, TableCellGeneric, TableCellTypePokemon } from './captured-table-styles'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst interval = 10;\r\n\r\nconst CapturedTable = ({ initList, handleClickRow }) => {\r\n    const headers = ['ID Pokémon', 'Tipo', 'Região']\r\n    const [listPokemons, setListPokemons] = useState(initList.slice(0, 10))\r\n\r\n    useEffect(() => {\r\n        const updateListPokemon = () => setListPokemons(initList.slice(0, 10))\r\n        updateListPokemon()\r\n    }, [initList])\r\n\r\n    const handleChange = (event, value) => {\r\n\r\n        //Calcula o número de itens na primeira página da tabela\r\n        if (value === 1) {\r\n            //verifica se a quantidade de itens e menor que o intervalo\r\n            if (initList.length < interval) {\r\n                const remainder = initList.length % 10 //calcula o resto da divisão\r\n                setListPokemons(initList.slice(0, remainder))\r\n                return\r\n            }\r\n            setListPokemons(initList.slice(0, 10))\r\n            return\r\n        }\r\n\r\n        //Calcula o número de itens na ultima página da tabela\r\n        const roof = Math.ceil(initList.length / 10)\r\n        if (value >= roof) {\r\n            const remainder = initList.length % 10\r\n            remainder > 0 ? setListPokemons(initList.slice(initList.length - remainder, initList.length)) : setListPokemons(initList.slice(initList.length - 10, initList.length))\r\n            return\r\n        }\r\n\r\n        //Calcula o número de itens da tabela\r\n        const endIndex = value * 10  //calcula o valor final baseado na página atual\r\n        const startIndex = endIndex - (interval) //calcula o primeiro indice baseado na diferença do ultimo indece com o intervalo\r\n        setListPokemons(initList.slice(startIndex, endIndex))\r\n    };\r\n\r\n\r\n    return <Container>\r\n        <Table stickyHeader size='small' style={{ height: 400, marginBottom: '1em' }}>\r\n            <TableHead>\r\n                <TableRow>\r\n                    {headers.map((header) => (\r\n                        <TableCell key={header}>{header}</TableCell>\r\n                    ))}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody >\r\n                {\r\n                    listPokemons.map((row, id) => (\r\n                        <TableRow style={{ cursor: 'pointer' }} hover={true} onClick={() => handleClickRow(row.pokemonId)} key={id}>\r\n                            <TableCell>{row.pokemonId}</TableCell>\r\n                            <TableCellTypePokemon defaultValue={row.type}>{row.type}</TableCellTypePokemon>\r\n                            <TableCell>{row.region}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n            </TableBody>\r\n        </Table>\r\n        <Pagination count={Math.ceil(initList.length / 10)}\r\n            defaultPage={1}\r\n            showFirstButton\r\n            showLastButton\r\n            color=\"primary\"\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n        />\r\n    </Container>\r\n}\r\n\r\nexport default CapturedTable;","import { useState } from 'react';\r\n\r\nimport PokemonDetails from './modal-pokemon-details/PokemonDetails';\r\nimport MyModal from '../../globals/globals-components/MyModal';\r\nimport FilterBar from './filter-bar/FilterBar';\r\nimport { Div, Header } from '../../globals/globals-styles/globals-styles';\r\nimport CapturedTable from './captured-table/CapturedTable'\r\n\r\n\r\nconst PokemonCaptures = ({ captures }) => {\r\n    const [pokemonId, setPokemonId] = useState(0)\r\n    const [initList, setInitList] = useState(captures)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    //FUNÇÃO QUE CONTROLA O MODAL\r\n    const handleClickRow = (id) => {\r\n        setPokemonId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    //Atualiza o estado da lista\r\n    const handleListPokemons = (list) => setInitList(list)\r\n\r\n    return <Div>\r\n        <Header>\r\n            <h4>Pokémons Capturados</h4>\r\n        </Header>\r\n        <FilterBar handleListPokemons={handleListPokemons}></FilterBar>\r\n        <CapturedTable initList={initList} handleClickRow={handleClickRow}></CapturedTable>\r\n        {/*Renderiza o modal só quando ele for aberto*/}\r\n        {open && \r\n            <MyModal open={open} title={'Detalhes'} handleModal={() => setOpen(false)} >\r\n                <PokemonDetails pokemonId={pokemonId} ></PokemonDetails>\r\n            </MyModal>\r\n        }\r\n    </Div>\r\n}\r\n\r\nexport default PokemonCaptures;","import styled from 'styled-components'\r\nimport { SkeletonPlaceholder, SkeletonText } from \"carbon-components-react\";\r\n\r\nexport const GraphByRegionDiv = styled.div`\r\n    margin-left: 5em;\r\n    margin-top: 2em \r\n`\r\nexport const GraphByRegionBody = styled.div`\r\n    display: flex;  \r\n`\r\nexport const GraphByRegionSkeletonPlaceDiv = styled.div`\r\n    margin-bottom: 0.5em; \r\n    margin-right: 2em;\r\n`\r\nexport const GraphByRegionSkeletonDiv = styled.div`\r\n    margin-top: -1em;\r\n`\r\nexport const Skeleton = styled(SkeletonText)`\r\n    width: 4em; \r\n`\r\nexport const SkeletonPlace = styled(SkeletonPlaceholder)`\r\n    width: 8em;\r\n    height: 8em;\r\n    border-radius: 20em;\r\n`","import {\r\n    Skeleton,\r\n    SkeletonPlace,\r\n    GraphByRegionDiv,\r\n    GraphByRegionBody,\r\n    GraphByRegionSkeletonPlaceDiv,\r\n    GraphByRegionSkeletonDiv\r\n} from \"./graph-captures-by-region-skeleton-styles\";\r\n\r\n\r\nconst GraphCapturesByRegionSkeleton = () => {\r\n\r\n    return <GraphByRegionDiv>\r\n        <GraphByRegionBody>\r\n            <GraphByRegionSkeletonPlaceDiv>\r\n                <SkeletonPlace></SkeletonPlace>\r\n            </GraphByRegionSkeletonPlaceDiv>\r\n            <GraphByRegionSkeletonDiv>\r\n                <Skeleton></Skeleton>\r\n                <Skeleton></Skeleton>\r\n                <Skeleton></Skeleton>\r\n                <Skeleton></Skeleton>\r\n                <Skeleton></Skeleton>\r\n            </GraphByRegionSkeletonDiv>\r\n        </GraphByRegionBody>\r\n    </GraphByRegionDiv>\r\n}\r\n\r\nexport default GraphCapturesByRegionSkeleton;","import { Chart } from \"react-google-charts\";\r\nimport { Div, Header } from \"../../globals/globals-styles/globals-styles\";\r\nimport GraphCapturesByRegionSkeleton from './GraphCapturesByRegionSkeleton'\r\n\r\nconst GraphCapturesByRegion = ({ reports }) => {\r\n    const data = [\r\n        ['Task', 'Pokemons by region'],\r\n        ['Sinnoh', reports.sinnoh],\r\n        ['Hoenn', reports.hoenn],\r\n        ['Unova', reports.unova],\r\n        ['Kalos', reports.kalos],\r\n        ['Kanto', reports.kanto],\r\n    ]\r\n\r\n    return <Div>\r\n        <Header >\r\n            <h4>Capturados por Região</h4>\r\n        </Header>\r\n        <Chart\r\n            width={'20em'}\r\n            height={'15em'}\r\n            chartType=\"PieChart\"\r\n            loader={<GraphCapturesByRegionSkeleton></GraphCapturesByRegionSkeleton>}\r\n            data={data}\r\n            options={{\r\n                is3D: true,\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n        />\r\n    </Div>\r\n}\r\n\r\nexport default GraphCapturesByRegion;","import styled from 'styled-components'\r\nimport { SkeletonPlaceholder } from \"carbon-components-react\";\r\n\r\nexport const SkeletonPlace = styled(SkeletonPlaceholder)`\r\n    width: 90%;\r\n    height: 14em;\r\n    margin-top: 1em\r\n`\r\nexport const Div = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center\r\n`","import { SkeletonPlace, Div } from './graph-captures-by-type-skeleton-styles'\r\n\r\nconst GraphCapturesByTypeSkeleton = () => {\r\n    return <Div>\r\n        <SkeletonPlace></SkeletonPlace>\r\n    </Div>\r\n}\r\n\r\nexport default GraphCapturesByTypeSkeleton;","import { Chart } from \"react-google-charts\";\r\nimport { Div, Header } from \"../../globals/globals-styles/globals-styles\";\r\nimport { palleteTypeColors } from '../../services/palleteTypeColors'\r\nimport GraphCapturesByTypeSkeleton from \"./GraphCapturesByTypeSkeleton\";\r\n\r\nconst GraphCapturesByType = ({ reports }) => {\r\n\r\n    const data = [\r\n        ['Tipo', '', { role: 'style' },],\r\n        [\"dragon\", reports.dragon, palleteTypeColors.dragon],\r\n        [\"ghost\", reports.ghost, palleteTypeColors.ghost],\r\n        [\"psychic\", reports.psychic, palleteTypeColors.psychic],\r\n        [\"grass\", reports.grass, palleteTypeColors.grass],\r\n        [\"fire\", reports.fire, palleteTypeColors.fire],\r\n        [\"normal\", reports.normal, palleteTypeColors.normal],\r\n        [\"bug\", reports.bug, palleteTypeColors.bug],\r\n        [\"water\", reports.water, palleteTypeColors.water],\r\n        [\"dark\", reports.dark, palleteTypeColors.dark],\r\n        [\"ground\", reports.ground, palleteTypeColors.ground],\r\n        [\"steel\", reports.steel, palleteTypeColors.steel],\r\n        [\"fairy\", reports.fairy, palleteTypeColors.fairy],\r\n        [\"fighting\", reports.fighting, palleteTypeColors.fighting],\r\n        [\"electric\", reports.electric, palleteTypeColors.electric],\r\n        [\"poison\", reports.poison, palleteTypeColors.poison],\r\n        [\"ice\", reports.ice, palleteTypeColors.ice],\r\n        [\"rock\", reports.rock, palleteTypeColors.rock]\r\n    ]\r\n\r\n    return <Div>\r\n        <Header>\r\n            <h4>Capturados por Tipo</h4>\r\n        </Header>\r\n        <Chart\r\n            width={'100%'}\r\n            height={'15em'}\r\n            chartType=\"ColumnChart\"\r\n            loader={<GraphCapturesByTypeSkeleton></GraphCapturesByTypeSkeleton>}\r\n            data={data}\r\n            options={{\r\n                colors: ['#fff'],\r\n                legend: 'Número de Pokémons capturados por tipo',\r\n\r\n            }}\r\n        />\r\n    </Div>\r\n}\r\n\r\nexport default GraphCapturesByType;","import styled from 'styled-components'\r\n\r\nexport const TextH5 = styled.h5`\r\n    font-weight: lighter;\r\n    padding-left: 0.5em;\r\n`\r\n","import { Column, Row, SkeletonPlaceholder } from \"carbon-components-react\";\r\n\r\nconst BattleTeamSkeleton = () => {\r\n    let myBattleTeam = ['', '', '', '', '', '']\r\n    return <div style={{ padding: '1em' }}>\r\n        <Row>\r\n            {myBattleTeam.map((row, id) => (\r\n                <Column style={{ marginBottom: '0.5em' }} key={id}>\r\n                    <SkeletonPlaceholder></SkeletonPlaceholder>\r\n                </Column>\r\n\r\n            ))}\r\n        </Row>\r\n    </div>\r\n}\r\n\r\nexport default BattleTeamSkeleton;","import { useEffect, useState } from \"react\";\r\nimport { Column, Grid, Row } from \"carbon-components-react\";\r\nimport { Header, Div } from '../../globals/globals-styles/globals-styles'\r\nimport { getPokemonDetails } from \"../../services/getPokemonDetails\";\r\nimport { TextH5 } from './battle-team-style'\r\nimport BattleTeamSkeleton from \"./BattleTeamSkeleton\";\r\n\r\nconst BattleTeam = ({ battleTeam }) => {\r\n    const [myBattleTeam, setBattleTeam] = useState(null);\r\n\r\n    // LOGO APÓS A RENDERIZAÇÃO DO COMPONENTE REALIZA CHAMA A FUNÇÃO QUE BUSCA OS DETALHES DE TODOS OS POKEMONS DA LISTA BATTLETEAM\r\n    useEffect(() => {\r\n\r\n        const getMyTeam = async () => {\r\n\r\n            const myTeam = []\r\n            for (const key in battleTeam) {\r\n                if (Object.hasOwnProperty.call(battleTeam, key)) {\r\n                    const { name, sprites } = await getPokemonDetails(battleTeam[key].pokedexNumber)\r\n                    myTeam.push({\r\n                        name: name,\r\n                        photo: sprites.front_default\r\n                    })\r\n                }\r\n            }\r\n\r\n            setBattleTeam(myTeam)\r\n        }\r\n        getMyTeam()\r\n    }, [battleTeam])\r\n\r\n    return <Div>\r\n        <Header>\r\n            <h4>Time de batalha</h4>\r\n        </Header>\r\n        <Grid>\r\n            <Row>\r\n                {\r\n                    myBattleTeam !== null ?\r\n                        myBattleTeam.map((row, id) => (\r\n                            <Column key={id}>\r\n                                {row.photo !== null ? <img src={row.photo} alt=\"Front default pokemon\"></img> : null}\r\n                                <TextH5>{row.name}</TextH5>\r\n                            </Column>\r\n\r\n                        ))\r\n                        :\r\n                        <BattleTeamSkeleton></BattleTeamSkeleton>\r\n                }\r\n            </Row>\r\n        </Grid>\r\n    </Div>\r\n}\r\n\r\nexport default BattleTeam;","export const getBattleTeam = async () => {\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:3000/battle_team', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        const data = await response.json()\r\n        \r\n        return data\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}\r\n","\r\nexport const getReports = async () => {\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:3000/reports', {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        return json\r\n    } catch (error) {\r\n        console.log(error)\r\n        return null\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo_pokedex.3b21d5eb.png\";","import styled from 'styled-components'\r\n\r\nexport const Main = styled.div`\r\n    padding-bottom: 2em;\r\n`\r\n\r\nexport const AppHeader = styled.div`\r\n    width: 100%;\r\n    height: 6em;\r\n    background-color: #5555ee ;\r\n    \r\n    img{\r\n        zIndex: 1000;\r\n        margin-top: -1.8em;\r\n        margin-left: -2em;\r\n        text-align: center;\r\n    }\r\n`\r\n","import { useEffect, useState } from 'react'\nimport { Column, Grid, Row } from 'carbon-components-react';\n\nimport TablePokemonCaptures from './components/UI/table-pokemon-captured/PokemonCaptured';\nimport GraphCapturesByRegion from './components/UI/GraphCapturesByRegion/GraphCapturesByRegion'\nimport GraphCapturesByType from './components/UI/GraphCapturesByType/GraphCapturesByType'\nimport BattleTeam from './components/UI/battle-team/BattleTeam';\n\nimport { getCaptures } from './components/services/getCaptures'\nimport { getBattleTeam } from './components/services/getBattleTeam';\nimport { getReports } from './components/services/getReports';\n\nimport logo from './assets/logo_pokedex.png'\n\nimport './carbon-styles.scss'\nimport { Main, AppHeader } from './app-styles';\n\nconst App = () => {\n\n  const [captures, setCaptures] = useState(null);\n  const [battleTeam, setBattleTeam] = useState(null);\n  const [reports, setReports] = useState(null);\n\n  useEffect(() => {\n    const loadCapture = async () => {\n      const capturesResponse = await getCaptures();\n      const battleTeamResponse = await getBattleTeam();\n      const reportsResponse = await getReports();\n\n      setCaptures(capturesResponse)\n      setBattleTeam(battleTeamResponse)\n      setReports(reportsResponse)\n    }\n\n    loadCapture()\n  }, [])\n\n  return (\n    <Main>\n      <AppHeader>\n        <img src={logo} alt={'imagem-pokemon-title'}></img>\n      </AppHeader>\n      <Grid>\n        <Row>\n          <Column xlg={3}>\n            {reports !== null && <GraphCapturesByRegion reports={reports.capturesByRegion}></GraphCapturesByRegion>}\n            {battleTeam !== null && <BattleTeam battleTeam={battleTeam}></BattleTeam>}\n          </Column>\n          <Column xlg={9}>\n            {reports !== null && <GraphCapturesByType reports={reports.capturesByType}></GraphCapturesByType>}\n            {captures !== null && <TablePokemonCaptures captures={captures}></TablePokemonCaptures>}\n          </Column>\n        </Row>\n      </Grid>\n    </Main>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}